name: Publish Release

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'Release title (e.g., v1.0.0)'
        required: true
        type: string
      previous_tag:
        description: 'Previous tag to compare from (leave empty for all commits)'
        required: false
        type: string

jobs:
  publish-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build plugin
        run: ./gradlew clean build --no-daemon

      - name: Generate release description from commits
        id: generate_description
        run: |
          if [ -n "${{ inputs.previous_tag }}" ]; then
            COMMITS=$(git log ${{ inputs.previous_tag }}..HEAD --pretty=format:"- %s" --no-merges)
          else
            COMMITS=$(git log --pretty=format:"- %s" --no-merges)
          fi
          
          if [ -z "$COMMITS" ]; then
            COMMITS="- Initial release"
          fi
          
          echo "RELEASE_DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Find JAR file
        id: find_jar
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" -type f | head -n 1)
          echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "jar_name=$(basename $JAR_FILE)" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.release_title }}
          name: ${{ inputs.release_title }}
          body: |
            ## Changes
            
            ${{ env.RELEASE_DESCRIPTION }}
          files: ${{ steps.find_jar.outputs.jar_file }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Summary
        run: |
          echo "Release published successfully!"
          echo "Title: ${{ inputs.release_title }}"
          echo "Artifact: ${{ steps.find_jar.outputs.jar_name }}"